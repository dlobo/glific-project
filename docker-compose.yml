version: '3'

x-app: &default-app
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true
  build:
    args:
      ELIXIR_VERSION: ${ELIXIR_VERSION}
      ERLANG_VERSION: ${ERLANG_VERSION}
      ALPINE_VERSION: ${ALPINE_VERSION}
      NODE_VERSION: ${NODE_VERSION}
      POSTGRES_VERSION: ${POSTGRES_VERSION}
      AUTH_KEY: ${AUTH_KEY}
      FP: ${FP}
  environment: &env
    MIX_ENV: ${MIX_ENV}
    DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/glific_dev
    HISTFILE: /app/log/.shell_history
    PSQL_HISTFILE: /app/log/.psql_history
    ERL_AFLAGS: -kernel shell_history enabled
  image: glific-docker:0.0.1
  tmpfs:
    - /tmp
  healthcheck:
    interval: "60s"
    timeout: "3s"
    start_period: "5s"
    retries: 3

services:
  backend:
    image: glific-backend
    build:
      context: "./glific"
      dockerfile: Dockerfile
      args:
        SERVER_PORT: 4000
        ELIXIR_VERSION: ${ELIXIR_VERSION}
        ERLANG_VERSION: ${ERLANG_VERSION}
        ALPINE_VERSION: ${ALPINE_VERSION}
        NODE_VERSION: ${NODE_VERSION}
        POSTGRES_VERSION: ${POSTGRES_VERSION}
        FP: ${FP}
        AUTH_KEY: ${AUTH_KEY}
    depends_on:
      - postgres
    ports:
      - 4000:4000
      - 4001:4001
    healthcheck:
      test: "${DOCKER_SERVER_HEALTHCHECK_TEST}"
    volumes:
      - mix:/root/.mix
      - hex:/root/.hex
      - node_modules:/app/assets/node_modules
      - .docker/.psqlrc:/root/.psqlrc:ro
      - ./log/.erlang-history:/root/.cache/erlang-history

  frontend:
    image: glific-frontend
    build:
      context: "./glific-frontend"
      dockerfile: Dockerfile
      args:
        CLIENT_PORT: 3000
    ports:
      - 3000:3000
    healthcheck:
      test: "${DOCKER_CLIENT_HEALTHCHECK_TEST}"
    volumes:
      - node_modules:/app/assets/node_modules
      
  postgres:
    image: postgres:${POSTGRES_VERSION}-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
      - .docker/.psqlrc:/root/.psqlrc:ro
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432

volumes:
  mix:
  hex:
  node_modules:
  postgres: